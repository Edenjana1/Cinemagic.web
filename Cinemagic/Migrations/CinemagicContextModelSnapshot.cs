// <auto-generated />
using System;
using Cinemagic.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cinemagic.Migrations
{
    [DbContext(typeof(CinemagicContext))]
    partial class CinemagicContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cinemagic.Models.Member", b =>
                {
                    b.Property<int>("MemberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberID"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstMidName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("IdintityCard")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MemberID");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("Cinemagic.Models.Movie", b =>
                {
                    b.Property<int>("MovieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieID"));

                    b.Property<string>("AgeRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MovieDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MovieGenre")
                        .HasColumnType("int");

                    b.Property<string>("MovieName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MoviePrice")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MovieID");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("Cinemagic.Models.Purchase", b =>
                {
                    b.Property<int>("PurchaseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseID"));

                    b.Property<int?>("MemberEmail")
                        .HasColumnType("int");

                    b.Property<int?>("MemberID")
                        .HasColumnType("int");

                    b.Property<int?>("MovieID")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SerieID")
                        .HasColumnType("int");

                    b.HasKey("PurchaseID");

                    b.HasIndex("MemberID");

                    b.HasIndex("MovieID");

                    b.HasIndex("SerieID");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("Cinemagic.Models.Serie", b =>
                {
                    b.Property<int>("SerieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SerieID"));

                    b.Property<string>("AgeRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SeasonNum")
                        .HasColumnType("int");

                    b.Property<string>("SerieDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SerieGenre")
                        .HasColumnType("int");

                    b.Property<string>("SerieName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeriePrice")
                        .HasColumnType("int");

                    b.HasKey("SerieID");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("Cinemagic.Models.Purchase", b =>
                {
                    b.HasOne("Cinemagic.Models.Member", "Members")
                        .WithMany("Purchases")
                        .HasForeignKey("MemberID");

                    b.HasOne("Cinemagic.Models.Movie", "Movies")
                        .WithMany("Purchases")
                        .HasForeignKey("MovieID");

                    b.HasOne("Cinemagic.Models.Serie", "Series")
                        .WithMany("Purchases")
                        .HasForeignKey("SerieID");

                    b.Navigation("Members");

                    b.Navigation("Movies");

                    b.Navigation("Series");
                });

            modelBuilder.Entity("Cinemagic.Models.Member", b =>
                {
                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("Cinemagic.Models.Movie", b =>
                {
                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("Cinemagic.Models.Serie", b =>
                {
                    b.Navigation("Purchases");
                });
#pragma warning restore 612, 618
        }
    }
}
